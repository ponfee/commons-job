<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:cache="http://www.springframework.org/schema/cache"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:c="http://www.springframework.org/schema/c"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd
  ">

  <!-- Redis config included in application.yml -->
  <!-- <context:property-placeholder location="classpath:application-redis.yml" 
    ignore-unresolvable="true" /> -->

  <!-- redis 相关配置 -->
  <bean id="redisSentinelConfiguration" 
    class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
    <property name="master">
      <bean class="org.springframework.data.redis.connection.RedisNode">
        <property name="name" value="${redis.sentinel.master}" />
      </bean>
    </property>
    <property name="sentinels">
      <bean class="code.ponfee.commons.jedis.spring.SentinelRedisNodes" 
        c:sentinelNodes="${redis.sentinel.nodes}" />
      <!-- <set>
        <bean class="org.springframework.data.redis.connection.RedisNode">
          <constructor-arg index="0" value="112.74.170.75" />
          <constructor-arg index="1" value="16379"/>
        </bean>
        <bean class="org.springframework.data.redis.connection.RedisNode">
          <constructor-arg index="0" value="112.74.170.75" />
          <constructor-arg index="1" value="16380"/>
        </bean>
      </set> -->
    </property>
  </bean>

  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${redis.pool.max-active}" />
    <property name="maxIdle" value="${redis.pool.max-idle}" />
    <property name="minIdle" value="${redis.pool.min-idle}" />
    <property name="maxWaitMillis" value="${redis.pool.max-wait}" />
    <property name="testOnBorrow" value="true" />
  </bean>

  <bean id="jedisConnectionFactory" 
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="password" value="${redis.password}" />
    <property name="timeout" value="${redis.timeout}" />
    <property name="usePool" value="true" />
    <property name="poolConfig" ref="jedisPoolConfig" />
    <constructor-arg ref="redisSentinelConfiguration" />
  </bean>

  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
    p:connectionFactory-ref="jedisConnectionFactory"
    p:enableTransactionSupport="false" 
    p:exposeConnection="false">
    <property name="keySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    </property>
    <property name="defaultSerializer">
      <bean class="code.ponfee.commons.jedis.spring.KryoRedisSerializer" />
    </property>
  </bean>

  <!-- <bean id="redisCacheManager" 
    class="org.springframework.cache.support.SimpleCacheManager">
    <property name="caches">
      <set>
        <bean class="org.springframework.data.redis.cache.RedisCache"
          c:name="CACHE_NAME1" c:prefix="bytearray1.getBytes()"
          c:redisOperations-ref="redisTemplate" c:expiration="86400" />
        <bean class="org.springframework.data.redis.cache.RedisCache"
          c:name="CACHE_NAME2" c:prefix="bytearray2.getBytes()"
          c:redisOperations-ref="redisTemplate" c:expiration="86400" />
      </set>
    </property>
  </bean> -->

  <util:properties id="redisExpires" location="classpath*:META-INF/spring/redis-expires.propreties"/>
  <bean id="redisCacheManager"
        class="org.springframework.data.redis.cache.RedisCacheManager"
        c:redisOperations-ref="redisTemplate" p:usePrefix="true">
    <!--<constructor-arg index="0" ref="redisTemplate" />-->
    <constructor-arg index="1">
      <set>
        <value>CACHE_NAME1</value>
        <value>CACHE_NAME2</value>
      </set>
    </constructor-arg>
    <property name="cachePrefix">
      <bean class="org.springframework.data.redis.cache.DefaultRedisCachePrefix"/>
    </property>
    <property name="expires" ref="redisExpires"/>
    <property name="defaultExpiration" value="86400"/>
  </bean>
  <cache:annotation-driven cache-manager="redisCacheManager" />

</beans>
